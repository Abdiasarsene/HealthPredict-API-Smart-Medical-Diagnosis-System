import logging
import mlflow
import mlflow.pyfunc
from src.api.config_api import settings

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def load_model():
    """
    Charge un mod√®le MLflow √† partir du nom et de la version sp√©cifi√©e dans les varibales d'environemment 
    """
    
    try : 
        # D√©finir l'URI de tracking de MLflow
        if not settings.MLFLOW_TRACKING_URI:
            raise ValueError("‚ùå MLFLOW_TRACKING_URI non d√©fini dans le fichier .env")
        mlflow.set_tracking_uri(settings.MLFLOW_TRACKING_URI)
        logger.info(f"üì° MLflow Tracking URI :  {settings.MLFLOW_TRACKING_URI}")
        
        # Construire l'URI du mod√®le
        if not settings.MLFLOW_MODEL_NAME: 
            raise ValueError("‚ùå Nom du mod√®le non d√©fini")
        model_uri = f"models:/{settings.MLFLOW_MODEL_NAME}/{settings.MLFLOW_MODEL_VERSION}"
        
        logger.info(f"üì° Chargement du mod√®le depuis : {model_uri}")
        model = mlflow.pyfunc.load_model(model_uri)
        
        logger.info(f"‚úÖ Mod√®le MLflow charg√© avec succ√®s")
        return model
    
    except Exception as e: 
        logger.error(f"‚ùå Erreur lors du chargement du mod√®le MLflow : {str(e)}")
        raise e